diff-minor: <p><strong>Added:</strong></p>
	<div class="new"><p>&gt; #REDIRECT [[Writing Perl Modules]]</p></div>
ts: 1415076311
minor: 
host: 84.52.22.131
username: AlexDaniel
revision: 7
diff-major: 1
summary: 
languages: 
text: #REDIRECT [[Writing Perl Modules]]
	
	==Basic extension structure
	{{{
	use strict;
	use warnings;
	
	package ProgArm;
	our(%Keys);
	
	@Keys{MyNewSub} = 'g';
	
	sub MyNewSub {
	    # Wrie your code here
	}
	}}}
	
	==Repeats
	By default actions are called without any parameters, however {{{repeat.pl}}} will pass **1** or **-1** to indicate repeat and negative repeat.
	
	The longest way to detect negative repeat is to use
	{{{
	if defined $_[0] and $_[0] == -1
	}}}
	
	You can shorten it to
	{{{
	if ($_[0] // 0) == -1
	}}}
	
	However, it is much easier to use experimental [[http://perldoc.perl.org/perlop.html#Smartmatch-Operator smartmatch operator]]
	{{{
	if $_[0] ~~ -1
	}}}
	Even though it is deprecated, all extensions use smartmatch operator. You should use it too! (A simple sed command can easily change it in every module, that's why we ask you to respect consistency)
	
	We can rewrite previous example to handle negative repeats:
	{{{
	use strict;
	use warnings;
	
	package ProgArm;
	our(%Keys);
	
	@Keys{MyNewSub} = 'g';
	
	sub MyNewSub {
	    return MyNewSubNegative() if $_[0] ~~ -1;
	    # Wrie your code here
	}
	
	sub MyNewSubNegative {
	    # Wrie your code here
	}
	}}}
	
lastmajor: 7
keep-ts: 1415076311
