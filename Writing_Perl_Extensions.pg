flags: 0
blocks: <h2>Basic extension structure</h2><pre class="real">use strict;
	use warnings;
	
	package ProgArm;
	our(%Keys);
	
	@Keys{MyNewSub} = 'g';
	
	sub MyNewSub {
	    # Wrie your code here
	}</pre><h2>Repeats</h2><p>By default actions are called without any parameters, however <code>repeat.pl</code> will pass <strong>1</strong> or <strong>-1</strong> to indicate repeat and negative repeat.</p><p>The longest way to detect negative repeat is to use<br /></p><pre class="real">if defined $_[0] and $_[0] == -1</pre><p>You can shorten it to<br /></p><pre class="real">if ($_[0] // 0) == -1</pre><p>However, it is much easier to use experimental <a class="url http outside" href="http://perldoc.perl.org/perlop.html#Smartmatch-Operator">smartmatch operator</a><br /></p><pre class="real">if $_[0] ~~ -1</pre><p>Most extensions use smartmatch operator.</p><p>We can rewrite previous example to handle negative repeats:<br /></p><pre class="real">use strict;
	use warnings;
	
	package ProgArm;
	our(%Keys);
	
	@Keys{MyNewSub} = 'g';
	
	sub MyNewSub {
	    return MyNewSubNegative() if $_[0] ~~ -1;
	    # Wrie your code here
	}
	
	sub MyNewSubNegative {
	    # Wrie your code here
	}</pre>
diff-minor: <p><strong>Changed:</strong></p>
	<div class="old"><p>&lt; By default actions are called without any parameters, however {{{repeat.pl}}} will pass <strong class="changes">{{{</strong>1<strong class="changes">}}}</strong> or <strong class="changes">{{{-</strong>1<strong class="changes">}}}</strong> to indicate repeat and negative repeat.</p></div><p><strong>to</strong></p>
	<div class="new"><p>&gt; By default actions are called without any parameters, however {{{repeat.pl}}} will pass <strong class="changes">**</strong>1<strong class="changes">**</strong> or <strong class="changes">**-</strong>1<strong class="changes">**</strong> to indicate repeat and negative repeat.</p></div><p><strong>Changed:</strong></p>
	<div class="old"><p>&lt; {{{if defined $_[0] and $_[0] == -1}}}</p></div><p><strong>to</strong></p>
	<div class="new"><p>&gt; {{{<br />&gt; if defined $_[0] and $_[0] == -1<br />&gt; }}}</p></div><p><strong>Changed:</strong></p>
	<div class="old"><p>&lt; {{{if ($_[0] // 0) == -1}}}</p></div><p><strong>to</strong></p>
	<div class="new"><p>&gt; {{{<br />&gt; if ($_[0] // 0) == -1<br />&gt; }}}</p></div><p><strong>Changed:</strong></p>
	<div class="old"><p>&lt; {{{if $_[0] ~~ -1}}}</p></div><p><strong>to</strong></p>
	<div class="new"><p>&gt; {{{<br />&gt; if $_[0] ~~ -1<br />&gt; }}}</p></div>
ts: 1410981079
minor: 1
host: 89.235.230.13
username: AlexDaniel
revision: 5
diff-major: <p><strong>Changed:</strong></p>
	<div class="old"><p>&lt; By default actions are called without any parameters, however {{{repeat.pl}}} will pass {{{1}}} <strong class="changes">and</strong> {{{-1}}} to indicate repeat and negative repeat.</p></div><p><strong>to</strong></p>
	<div class="new"><p>&gt; By default actions are called without any parameters, however {{{repeat.pl}}} will pass {{{1}}} <strong class="changes">or</strong> {{{-1}}} to indicate repeat and negative repeat.</p></div>
summary: 
languages: 
text: ==Basic extension structure
	{{{
	use strict;
	use warnings;
	
	package ProgArm;
	our(%Keys);
	
	@Keys{MyNewSub} = 'g';
	
	sub MyNewSub {
	    # Wrie your code here
	}
	}}}
	
	==Repeats
	By default actions are called without any parameters, however {{{repeat.pl}}} will pass **1** or **-1** to indicate repeat and negative repeat.
	
	The longest way to detect negative repeat is to use
	{{{
	if defined $_[0] and $_[0] == -1
	}}}
	
	You can shorten it to
	{{{
	if ($_[0] // 0) == -1
	}}}
	
	However, it is much easier to use experimental [[http://perldoc.perl.org/perlop.html#Smartmatch-Operator smartmatch operator]]
	{{{
	if $_[0] ~~ -1
	}}}
	Most extensions use smartmatch operator.
	
	We can rewrite previous example to handle negative repeats:
	{{{
	use strict;
	use warnings;
	
	package ProgArm;
	our(%Keys);
	
	@Keys{MyNewSub} = 'g';
	
	sub MyNewSub {
	    return MyNewSubNegative() if $_[0] ~~ -1;
	    # Wrie your code here
	}
	
	sub MyNewSubNegative {
	    # Wrie your code here
	}
	}}}
	
lastmajor: 4
keep-ts: 1410981079
